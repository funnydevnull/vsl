To run/compile test classes:

SerializingTest:
================

From vsl/src dir:

javac vsl/test/SerializingTest.java

To run it:

java vsl.test.SerializingTest put mykey myval
java vsl.test.SerializingTest put mykey2 myval2

then 

java vsl.test.SerializingTest read 

If we use MultiValueMap from apache need to include classpath:

javac -cp .:../lib/commons-collections-3.2.1.jar  vsl/test/SerializingTest.java 


FileChunkingTest
================

To run cd to vsl/src and execute as below.

Chunk a file (in this case vsl_deisng_notes-1.tex) and store in file mydb:

java vsl.test.FileChunkingTest create mydb  ../test/input/version/vsl_design_notes-1.tex

NOTE: chunking params currently hard-coded.  Should make them args.

To see the chunked files in a DB:

java vsl.test.FileChunkingTest list mydb

To rebuild a chunked file and put it in "outputfile" use:

java vsl.test.FileChunkingTest reconstruct mydb vsl_design_notes-1.tex outputfile


TestCore1
=========

Basic test of core functionality.

To run try (last two args optional):

java vsl.test.TestCore1 store <filename> [data_string] [numChunks]

Example: 

java vsl.test.TestCore1 store vslDB howdy 12

will generate an Entry with one Version and numChunks data chunks (there's a
default value) and store them in a vslMMBackend which stores itself to
filename.  NOTE: will OVERWRITE file at <filename>!!

To read back in and print out the file:

java vsl.test.TestCore1 read <filename> 



